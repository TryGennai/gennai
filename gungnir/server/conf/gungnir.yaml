# Copyright 2013-2014 Recruit Technologies Co., Ltd. and contributors
# (see CONTRIBUTORS.md)
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License.  A copy of the
# License is distributed with this work in the LICENSE.md file.  You may
# also obtain a copy of the License from
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

### Gungnir server
# gungnir.server.port: 7100
# gungnir.server.pid.file: gungnir-server1.pid
# session.timeout.secs: 3600
# command.processor.cache.size: 1024
# gungnir.node.path: "/gungnir"

### Tuple store server
# tuple.store.server.port: 7200
# tuple.store.server.pid.file: tuple-store-server1.pid
# tracking.cookie.maxage: 864000000
# persistent.deser.queue.size: 1024
# persistent.deser.parallelism: 32
# persistent.deserializer: org.gennai.gungnir.tuple.persistent.JsonPersistentDeserializer
# persistent.emitter.queue.size: 1024
# persistent.emitter.parallelism: 32
# persistent.emit.tuples.max: 8
# persistent.emit.tuples.max.size: 1024
# persistent.emitter: org.gennai.gungnir.tuple.persistent.KafkaPersistentEmitter
# rewrite.rules:
#   - pattern: "/"
#     target: "/gungnir/v0.1"
#   - pattern: "/gennai/(\\w+)"
#     target: "/gungnir/v0.1/${ACCOUNT:root}/$1/json"

### Cluster
# cluster.mode: "distributed"
# cluster.zookeeper.servers:
#   - "localhost:2181"
# cluster.zookeeper.session.timeout: ${storm.zookeeper.session.timeout}
# cluster.zookeeper.connection.timeout: ${storm.zookeeper.connection.timeout}
# cluster.zookeeper.retry.times: ${storm.zookeeper.retry.times}
# cluster.zookeeper.retry.interval: ${storm.zookeeper.retry.interval}

### Admin server
# gungnir.admin.server.port: 7300
# gungnir.admin.server.backlog: 100

### Storm cluster
# storm.cluster.mode: "distributed"
# storm.nimbus.host: "localhost"

### Topology
# topology.workers: 1
# topology.status.check.times: 20
# topology.status.check.interval: 2000
# default.parallelism: 1
# gungnir.local.dir: "gungnir-local"

### Metastore
# metastore: org.gennai.gungnir.metastore.MongoDbMetaStore
# metastore.mongodb.servers:
#   - "localhost:27017"
# metastore.name: "gungnir_metastore"

### Tuple store
# kafka.brokers:
#   - "localhost:9092"
# kafka.required.acks: 1
# kafka.producer.type: "sync"
# kafka.auto.commit.interval: 10000
# kafka.zookeeper.servers:
#   - "localhost:2181"
# kafka.zookeeper.session.timeout: 6000
# kafka.zookeeper.connection.timeout: ${storm.zookeeper.connection.timeout}
# kafka.zookeeper.retry.times: ${storm.zookeeper.retry.times}
# kafka.zookeeper.retry.interval: ${storm.zookeeper.retry.interval}

### File registry
# export.retry.times: 5
# export.retry.interval: 1000

### Operator
# spout.operator.queue.size: 1024
# emit.operator.queue.size: 1024
# emit.operator.emit.tuples.max: 8
# tuplejoin.seek.size: 8

### Processor
# kafka.spout.fetch.size: 1048576
# kafka.spout.fetch.interval: 1000
# kafka.spout.offset.behind.max: 9223372036854775807
# kafka.spout.state.update.interval: 2000
# kafka.spout.topic.replication.factor: 1
# kafka.spout.read.brokers.retry.times: 5
# kafka.spout.read.brokers.retry.interval: 1000
# kafka.spout.partition.operation.retry.times: 5
# kafka.spout.partition.operation.retry.interval: 1000
# mongo.fetch.servers:
#   - "localhost:27017"
# mongo.fetch.cache.size: 1024
# web.fetch.cache.size: 1024
# kafka.emit.brokers:
#   - "localhost:9092"
# kafka.emit.required.acks: 1
# mongo.persist.servers:
#   - "localhost:27017"
# log.append.queue.size: 1024
# log.append.reconnect.delay: 30000

## Debug
# debug.log.append.queue.size: 1024
# debug.log.append.reconnect.delay: 1024

### Metrics
# metrics.reporters:
#   - reporter: org.gennai.gungnir.metrics.CsvMetricsReporter
#     interval.secs: 60
#     output.dir: ${gungnir.home}/logs
#   - reporter: org.gennai.gungnir.metrics.StatsdMetricsReporter
#     interval.secs: 60
#     statsd.host: ${metrics.statsd.host}
#     statsd.port: ${metrics.statsd.port}
#     statsd.prefix: ${metrics.reporter.prefix}
# topology.metrics.enabled: false
# topology.metrics.consumer: backtype.storm.metric.LoggingMetricsConsumer
# topology.metrics.consumer.parallelism: 1
# topology.metrics.interval.secs: 60
# topology.stats.sample.rate: ${topology.stats.sample.rate}
# metrics.statsd.host: "localhost"
# metrics.statsd.port: 8125
# metrics.consumer.prefix: "storm.metrics"
# metrics.reporter.prefix: "tuplestore"
